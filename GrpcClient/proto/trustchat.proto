syntax = "proto2";
package main;

//option go_package ="./proto";
option go_package ="./";

message TrustRequest {
  enum Type {
    SEND_MESSAGE = 0;
    UPDATE_PEER = 1;
    GET_RANKING = 2;
    TRUST_QUERY = 3;
  }

  required Type type = 1;
  optional SendMessage sendMessage = 2;
  optional UpdatePeer updatePeer = 3;
  optional GetRanking getRanking = 4;
}

message SendMessage {
  required bytes data = 1;
  required int64 created = 2;
  required bytes id = 3;
}

message UpdatePeer {
  optional bytes userHandle = 1;
}

message GetRanking {
    repeated string address = 1;
    required int64 score = 2;

}

message TrustResponse{
    //响应码
    required int32 code = 1;
    //响应值
    required string value = 2;
    optional GetRanking getRanking = 3;

}
service TrustClient{
    // 客户端流式rpc，在请求的参数前添加stream
    rpc TrustRequestData (TrustRequest) returns (TrustResponse){};

}